version: "3.3"
services:
  postgres:
    container_name: postgres
    restart: always
    image: postgres:12
    build:
      context: ./postgres
    volumes:
      - db_data:/var/lib/postgres/data
    env_file:
      - ./.env
    networks:
      - network
    ports:
      - 5432:5432

# postgraphile:
#   container_name: postgraphile
#   restart: always
#   image: postgraphile
#   build:
#       context: ./postgraphile
#   env_file:
#       - ./.env
#   depends_on:
#       - postgresql
#   networks:
#       - network
#   ports:
#       - 5433:5433
#   command: ["--connection", "${DATABASE_URL}", "--port", "5433", "--schema", "public", "--append-plugins", "postgraphile-plugin-connection-filter"]

  graphql-engine:
    container_name: hasura
    image: hasura/graphql-engine:v2.6.0
    ports:
    - 8080:8080
    depends_on:
    - postgres
    restart: always
    networks:
      - network
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey

  strapi:
    container_name: strapi
    image: strapi/strapi
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_NAME: postgres
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgrespassword
    volumes:
      - ./strapi:/srv/app
    ports:
      - '1337:1337'
    networks:
     - network
    depends_on:
      - postgres
      
networks:
  network:

volumes:
  db_data:
  strapi: